{"version":3,"file":"static/js/902.7996b5b5.chunk.js","mappings":"6LAOaA,EAAkB,WAC7B,IAAMC,GAAkBC,EAAAA,EAAAA,IAAYC,EAAAA,IAC9BC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,IAClBC,EAAeL,EAAfK,KAAMC,EAASN,EAATM,KAEd,OACE,gCACGH,GAAK,gCAA6BA,GAClCG,GAA4B,IAApBA,EAAKC,WAAmB,kCAAoC,MACrE,wBACGF,GACCA,EAAKG,KAAI,SAAAC,GAAU,OACjB,yBACE,uBAAIA,EAAWC,eADRD,EAAWE,QADH,QAQ5B,E,0FCZKC,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,GAAW,wBAAwBE,SAAS,sBAGxCC,EAAwB,WACnC,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAYlB,EAAAA,EAAAA,IAAYmB,EAAAA,IACxBC,GAAcpB,EAAAA,EAAAA,IAAYqB,EAAAA,IAEhC,GAAwBC,EAAAA,EAAAA,UAASF,GAAjC,eAAOG,EAAP,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACRD,EAAQJ,GACRM,EAAOC,YAER,GAAE,CAACP,IAEJ,IAAMM,GAASE,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbhB,MAAO,IAETF,iBAAkBA,EAClBmB,SAAU,SAAAC,GACR,IAAMC,EAAO,CACXC,OAAQ,mCACRC,UAAW,UACXC,aAAc,gBACdC,iBAAkB,CAChBC,SAAUN,EAAOlB,MACjByB,KAAMf,EACNgB,MAAO,KACPC,SAAU,OAIdxB,GAASyB,EAAAA,EAAAA,GAAiBT,GAC3B,IAGH,OACE,+BACE,UAACU,EAAA,EAAD,CACEC,UAAU,OACVb,SAAUJ,EAAOkB,aACjBC,GAAI,CACFC,IAAK,GAJT,WAOE,SAACC,EAAA,EAAD,CACEC,GAAI,EACJC,WAAS,EACTC,GAAG,QACHC,KAAK,QACLC,MAAM,4BACNC,MAAO3B,EAAOK,OAAOlB,MACrByC,SAAU5B,EAAO6B,aACjBrD,MAAOwB,EAAO8B,QAAQ3C,OAAS4C,QAAQ/B,EAAOgC,OAAO7C,OACrD8C,WAAYjC,EAAO8B,QAAQ3C,OAASa,EAAOgC,OAAO7C,SAEpD,SAAC+C,EAAA,EAAD,CACEX,WAAS,EACTD,GAAI,EACJa,QAAQ,YACRC,MAAM,UACNC,SAAU7C,EACV8C,KAAK,SANP,SAQG9C,GAAY,SAAC+C,EAAA,EAAD,CAAkBC,KAAM,KAAS,eAKvD,E,UCjFYC,EAAa,WACxB,IAAMnD,GAAWC,EAAAA,EAAAA,MAEjB,GAAwBK,EAAAA,EAAAA,UAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KAcA,OALAC,EAAAA,EAAAA,YAAU,WACRT,GAASoD,EAAAA,EAAAA,GAAc7C,GAExB,GAAE,CAACA,KAGF,iCACE,mBAAQ8C,QAde,WACzB7C,EAAQD,EAAO,EAChB,EAYwCwC,SAAUxC,EAAO,EAAtD,wBAGA,0BAAOA,KACP,mBAAQ8C,QAfe,WACzB7C,EAAQD,EAAO,EAChB,EAaG,yBAGL,EClBD,EAVoB,WAClB,OACE,iCACE,SAACR,EAAD,KACA,SAACjB,EAAD,KACA,SAACqE,EAAD,MAGL,C,gICZM,IAAMlE,EAAiB,SAAAqE,GAAK,OAAIA,EAAMC,YAAYA,WAAtB,EACtBlD,EAAgB,SAAAiD,GAAK,OAAIA,EAAMC,YAAYhD,IAAtB,EAErBJ,EAAe,SAAAmD,GAAK,OAAIA,EAAMC,YAAYrD,SAAtB,EACpBf,EAAW,SAAAmE,GAAK,OAAIA,EAAMC,YAAYrE,KAAtB,C","sources":["components/DepartmentsList.jsx","components/DepartmentsSearchForm.jsx","components/Pagination.jsx","pages/Departments/Departments.jsx","redux/departments/departments-selectors.js"],"sourcesContent":["import { useSelector } from 'react-redux';\n\nimport {\n  getDepartments,\n  getError,\n} from 'redux/departments/departments-selectors';\n\nexport const DepartmentsList = () => {\n  const departmentsData = useSelector(getDepartments);\n  const error = useSelector(getError);\n  const { data, info } = departmentsData;\n\n  return (\n    <>\n      {error && `Something went wrong: ${error}`}\n      {info && info.totalCount === 0 ? 'Sorry, there are no departments' : null}\n      <ul>\n        {data &&\n          data.map(department => (\n            <li key={department.SiteKey}>\n              <p>{department.Description}</p>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { Box, Button, CircularProgress, TextField } from '@mui/material';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  getIsLoading,\n  getPageNumber,\n} from 'redux/departments/departments-selectors';\nimport { fetchDepartments } from 'redux/departments/departments-operations';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nconst validationSchema = yup.object({\n  query: yup.string('Enter Name to Search').required('Name is Required'),\n});\n\nexport const DepartmentsSearchForm = () => {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(getIsLoading);\n  const currentPage = useSelector(getPageNumber);\n\n  const [page, setPage] = useState(currentPage);\n\n  useEffect(() => {\n    setPage(currentPage);\n    formik.submitForm();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentPage]);\n\n  const formik = useFormik({\n    initialValues: {\n      query: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      const body = {\n        apiKey: '8d677609f6e47ce83929374b3afab572',\n        modelName: 'Address',\n        calledMethod: 'getWarehouses',\n        methodProperties: {\n          CityName: values.query,\n          Page: page,\n          Limit: '50',\n          Language: 'UA',\n        },\n      };\n\n      dispatch(fetchDepartments(body));\n    },\n  });\n\n  return (\n    <>\n      <Box\n        component=\"form\"\n        onSubmit={formik.handleSubmit}\n        sx={{\n          gap: 1,\n        }}\n      >\n        <TextField\n          mb={1}\n          fullWidth\n          id=\"query\"\n          name=\"query\"\n          label=\"What do you want to find?\"\n          value={formik.values.query}\n          onChange={formik.handleChange}\n          error={formik.touched.query && Boolean(formik.errors.query)}\n          helperText={formik.touched.query && formik.errors.query}\n        />\n        <Button\n          fullWidth\n          mb={1}\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={isLoading}\n          type=\"submit\"\n        >\n          {isLoading ? <CircularProgress size={24} /> : 'Search'}\n        </Button>\n      </Box>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport { setPageNumber } from 'redux/departments/departments-slice';\n\nexport const Pagination = () => {\n  const dispatch = useDispatch();\n\n  const [page, setPage] = useState(1);\n\n  const onClickPrevHandler = () => {\n    setPage(page - 1);\n  };\n  const onClickNexthandler = () => {\n    setPage(page + 1);\n  };\n\n  useEffect(() => {\n    dispatch(setPageNumber(page));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [page]);\n\n  return (\n    <>\n      <button onClick={onClickPrevHandler} disabled={page < 2 ? true : false}>\n        Prev Page\n      </button>\n      <span>{page}</span>\n      <button onClick={onClickNexthandler}>Next Page</button>\n    </>\n  );\n};\n","import { DepartmentsList } from 'components/DepartmentsList';\nimport { DepartmentsSearchForm } from 'components/DepartmentsSearchForm';\nimport { Pagination } from 'components/Pagination';\n\nconst Departments = () => {\n  return (\n    <>\n      <DepartmentsSearchForm />\n      <DepartmentsList />\n      <Pagination />\n    </>\n  );\n};\n\nexport default Departments;\n","export const getDepartments = state => state.departments.departments;\nexport const getPageNumber = state => state.departments.page;\n\nexport const getIsLoading = state => state.departments.isLoading;\nexport const getError = state => state.departments.error;\n"],"names":["DepartmentsList","departmentsData","useSelector","getDepartments","error","getError","data","info","totalCount","map","department","Description","SiteKey","validationSchema","yup","query","required","DepartmentsSearchForm","dispatch","useDispatch","isLoading","getIsLoading","currentPage","getPageNumber","useState","page","setPage","useEffect","formik","submitForm","useFormik","initialValues","onSubmit","values","body","apiKey","modelName","calledMethod","methodProperties","CityName","Page","Limit","Language","fetchDepartments","Box","component","handleSubmit","sx","gap","TextField","mb","fullWidth","id","name","label","value","onChange","handleChange","touched","Boolean","errors","helperText","Button","variant","color","disabled","type","CircularProgress","size","Pagination","setPageNumber","onClick","state","departments"],"sourceRoot":""}