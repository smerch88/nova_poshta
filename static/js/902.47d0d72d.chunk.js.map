{"version":3,"file":"static/js/902.47d0d72d.chunk.js","mappings":"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","sources":["components/DepartmentsList.jsx","components/DepartmentsSearchForm.jsx","components/Pagination.jsx","pages/Departments/Departments.jsx","redux/departments/departments-selectors.js"],"sourcesContent":["import { List, ListItem, Typography } from '@mui/material';\n\nimport { useSelector } from 'react-redux';\n\nimport {\n  getDepartments,\n  getError,\n} from 'redux/departments/departments-selectors';\n\nexport const DepartmentsList = () => {\n  const departmentsData = useSelector(getDepartments);\n  const error = useSelector(getError);\n  const { data, info } = departmentsData;\n\n  return (\n    <>\n      {error && `Something went wrong: ${error}`}\n      {info && info.totalCount === 0 ? 'Sorry, there are no departments' : null}\n      <List>\n        {data &&\n          data.map(department => (\n            <ListItem key={department.SiteKey}>\n              <Typography>{department.Description}</Typography>\n            </ListItem>\n          ))}\n      </List>\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { Box, Button, CircularProgress, TextField } from '@mui/material';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  getIsLoading,\n  getPageNumber,\n} from 'redux/departments/departments-selectors';\nimport { fetchDepartments } from 'redux/departments/departments-operations';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nconst validationSchema = yup.object({\n  query: yup.string('Enter Name to Search').required('Name is Required'),\n});\n\nexport const DepartmentsSearchForm = () => {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(getIsLoading);\n  const currentPage = useSelector(getPageNumber);\n\n  const [page, setPage] = useState(currentPage);\n\n  useEffect(() => {\n    setPage(currentPage);\n  }, [currentPage]);\n\n  const formik = useFormik({\n    initialValues: {\n      query: 'київ',\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      const body = {\n        apiKey: '8d677609f6e47ce83929374b3afab572',\n        modelName: 'Address',\n        calledMethod: 'getWarehouses',\n        methodProperties: {\n          CityName: values.query,\n          Page: page,\n          Limit: '50',\n          Language: 'UA',\n        },\n      };\n\n      dispatch(fetchDepartments(body));\n    },\n  });\n\n  useEffect(() => {\n    formik.submitForm();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [page]);\n\n  return (\n    <>\n      <Box\n        component=\"form\"\n        onSubmit={formik.handleSubmit}\n        sx={{\n          gap: 1,\n        }}\n        mt={2}\n      >\n        <TextField\n          mb={1}\n          fullWidth\n          id=\"query\"\n          name=\"query\"\n          label=\"What do you want to find?\"\n          value={formik.values.query}\n          onChange={formik.handleChange}\n          error={formik.touched.query && Boolean(formik.errors.query)}\n          helperText={formik.touched.query && formik.errors.query}\n        />\n        <Button\n          fullWidth\n          mb={1}\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={isLoading}\n          type=\"submit\"\n        >\n          {isLoading ? <CircularProgress size={24} /> : 'Search'}\n        </Button>\n      </Box>\n    </>\n  );\n};\n","import { Box, Button, Typography } from '@mui/material';\n\nimport { useEffect, useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getIsLoading } from 'redux/departments/departments-selectors';\nimport { setPageNumber } from 'redux/departments/departments-slice';\n\nexport const Pagination = () => {\n  const dispatch = useDispatch();\n\n  const [page, setPage] = useState(1);\n\n  const onClickPrevHandler = () => {\n    setPage(page - 1);\n  };\n  const onClickNexthandler = () => {\n    setPage(page + 1);\n  };\n\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(setPageNumber(page));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [page]);\n\n  return (\n    <>\n      <Box sx={{ display: 'flex', justifyContent: 'center' }}>\n        <Button\n          onClick={onClickPrevHandler}\n          disabled={page < 2 || isLoading ? true : false}\n        >\n          Prev Page\n        </Button>\n        <Typography variant=\"h5\" component=\"span\" mr={1} ml={1}>\n          {page}\n        </Typography>\n        <Button\n          onClick={onClickNexthandler}\n          disabled={isLoading ? true : false}\n        >\n          Next Page\n        </Button>\n      </Box>\n    </>\n  );\n};\n","import { Container } from '@mui/material';\n\nimport { DepartmentsList } from 'components/DepartmentsList';\nimport { DepartmentsSearchForm } from 'components/DepartmentsSearchForm';\nimport { Pagination } from 'components/Pagination';\n\nconst Departments = () => {\n  return (\n    <>\n      <Container>\n        <DepartmentsSearchForm />\n        <DepartmentsList />\n        <Pagination />\n      </Container>\n    </>\n  );\n};\n\nexport default Departments;\n","export const getDepartments = state => state.departments.departments;\nexport const getPageNumber = state => state.departments.page;\n\nexport const getIsLoading = state => state.departments.isLoading;\nexport const getError = state => state.departments.error;\n"],"names":["DepartmentsList","departmentsData","useSelector","getDepartments","error","getError","data","info","totalCount","List","map","department","ListItem","Typography","Description","SiteKey","validationSchema","yup","query","required","DepartmentsSearchForm","dispatch","useDispatch","isLoading","getIsLoading","currentPage","getPageNumber","useState","page","setPage","useEffect","formik","useFormik","initialValues","onSubmit","values","body","apiKey","modelName","calledMethod","methodProperties","CityName","Page","Limit","Language","fetchDepartments","submitForm","Box","component","handleSubmit","sx","gap","mt","TextField","mb","fullWidth","id","name","label","value","onChange","handleChange","touched","Boolean","errors","helperText","Button","variant","color","disabled","type","CircularProgress","size","Pagination","setPageNumber","display","justifyContent","onClick","mr","ml","Container","state","departments"],"sourceRoot":""}