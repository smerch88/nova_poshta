{"version":3,"file":"static/js/409.22763d8a.chunk.js","mappings":"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","sources":["redux/tnn/tnn-selectors.js","components/TTN/TtnSavedCards.jsx","components/TTN/SwipeableEdgeDrawer.jsx","components/TTN/TnnList.jsx","components/TTN/TnnSearchForm.jsx","pages/Tnn/Tnn.jsx"],"sourcesContent":["export const getTnn = state => state.tnn.tnn;\nexport const getTnnList = state => state.tnn.tnnList;\nexport const getQueryTnn = state => state.tnn.queryTnn;\n\nexport const getIsLoading = state => state.tnn.isLoading;\nexport const getError = state => state.tnn.error;\n","import {\n  Button,\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  Grid,\n  ListItem,\n  Typography,\n  Zoom,\n} from '@mui/material';\n\nexport const TtnSavedCards = ({\n  ttn,\n  onTnnListClickHandler,\n  onTnnDeleteClickHandler,\n}) => {\n  return (\n    <>\n      <Grid item xs={12} sm={6} md={4} key={ttn} data-tnn={ttn}>\n        <ListItem sx={{ minWidth: 275 }}>\n          <Zoom in>\n            <Card sx={{ width: '100%' }}>\n              <CardActionArea>\n                <CardContent onClick={onTnnListClickHandler} data-tnn={ttn}>\n                  <Typography\n                    onClick={onTnnListClickHandler}\n                    sx={{ textAlign: 'center' }}\n                    data-tnn={ttn}\n                  >\n                    {ttn}\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n              <CardActions>\n                <Button\n                  fullWidth\n                  data-tnn={ttn}\n                  onClick={onTnnDeleteClickHandler}\n                >\n                  видалити\n                </Button>\n              </CardActions>\n            </Card>\n          </Zoom>\n        </ListItem>\n      </Grid>\n    </>\n  );\n};\n","import * as React from 'react';\nimport { Global } from '@emotion/react';\nimport { styled } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { grey } from '@mui/material/colors';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\nimport { useMediaQuery } from '@mui/material';\nimport { TtnSavedCards } from './TtnSavedCards';\n\nconst drawerBleeding = 56;\n\nconst Root = styled('div')(({ theme }) => ({\n  height: '100%',\n  backgroundColor:\n    theme.palette.mode === 'light'\n      ? grey[100]\n      : theme.palette.background.default,\n}));\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'light' ? '#fff' : grey[800],\n}));\n\nconst Puller = styled(Box)(({ theme }) => ({\n  width: 30,\n  height: 6,\n  backgroundColor: theme.palette.mode === 'light' ? grey[300] : grey[900],\n  borderRadius: 3,\n  position: 'absolute',\n  top: 8,\n  left: 'calc(50% - 15px)',\n}));\n\nfunction SwipeableEdgeDrawer(props) {\n  const {\n    window,\n    tnnListData,\n    onTnnListClickHandler,\n    onTnnDeleteClickHandler,\n  } = props;\n  const [open, setOpen] = React.useState(false);\n\n  const toggleDrawer = newOpen => () => {\n    setOpen(newOpen);\n  };\n\n  // This is used only for the example\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n\n  const isMobile = useMediaQuery(theme => theme.breakpoints.down('md'));\n\n  if (!isMobile) {\n    // Don't render the drawer on non-mobile devices\n    return null;\n  }\n\n  return (\n    <Root>\n      <CssBaseline />\n      <Global\n        styles={{\n          '.MuiDrawer-root > .MuiPaper-root': {\n            height: `calc(50% - ${drawerBleeding}px)`,\n            overflow: 'visible',\n          },\n        }}\n      />\n      <Box sx={{ textAlign: 'center', display: { md: 'none' } }}>\n        <Button fullWidth onClick={toggleDrawer(true)}>\n          Відкрити історію\n        </Button>\n      </Box>\n      <SwipeableDrawer\n        container={container}\n        anchor=\"bottom\"\n        open={open}\n        onClose={toggleDrawer(false)}\n        onOpen={toggleDrawer(true)}\n        swipeAreaWidth={drawerBleeding}\n        disableSwipeToOpen={false}\n        ModalProps={{\n          keepMounted: true,\n        }}\n      >\n        <StyledBox\n          sx={{\n            position: 'absolute',\n            top: -drawerBleeding,\n            borderTopLeftRadius: 8,\n            borderTopRightRadius: 8,\n            visibility: 'visible',\n            right: 0,\n            left: 0,\n          }}\n        >\n          <Puller />\n          <Typography sx={{ p: 2, color: 'text.secondary' }}>\n            Результатів: {tnnListData?.length}\n          </Typography>\n        </StyledBox>\n        <StyledBox\n          sx={{\n            px: 2,\n            pb: 2,\n            height: '100%',\n            overflow: 'auto',\n          }}\n        >\n          {tnnListData &&\n            tnnListData.map(ttn => (\n              <TtnSavedCards\n                key={ttn}\n                ttn={ttn}\n                onTnnListClickHandler={onTnnListClickHandler}\n                onTnnDeleteClickHandler={onTnnDeleteClickHandler}\n              />\n            ))}\n        </StyledBox>\n      </SwipeableDrawer>\n    </Root>\n  );\n}\n\nexport default SwipeableEdgeDrawer;\n","import {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Divider,\n  Grid,\n  Icon,\n  List,\n  ListItem,\n  Skeleton,\n  Typography,\n  useTheme,\n} from '@mui/material';\nimport MarkunreadMailboxIcon from '@mui/icons-material/MarkunreadMailbox';\nimport SendTimeExtensionIcon from '@mui/icons-material/SendTimeExtension';\nimport AllInboxIcon from '@mui/icons-material/AllInbox';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  getTnn,\n  getError,\n  getTnnList,\n  getIsLoading,\n} from 'redux/tnn/tnn-selectors';\nimport {\n  deleteAllSavedTnn,\n  deleteQueryTnn,\n  setQueryTnn,\n} from 'redux/tnn/tnn-slice';\n\nimport SwipeableEdgeDrawer from './SwipeableEdgeDrawer';\n\nimport { TtnSavedCards } from './TtnSavedCards';\n\nexport const TnnList = () => {\n  const tnnData = useSelector(getTnn);\n  const tnnListData = useSelector(getTnnList);\n\n  const theme = useTheme();\n\n  const error = useSelector(getError);\n  const isLoading = useSelector(getIsLoading);\n  const dispatch = useDispatch();\n\n  const { data, errors } = tnnData;\n\n  const onTnnListClickHandler = event => {\n    dispatch(setQueryTnn(event.target.dataset.tnn));\n  };\n\n  const onTnnDeleteClickHandler = event => {\n    dispatch(setQueryTnn(''));\n    dispatch(deleteQueryTnn(event.target.dataset.tnn));\n  };\n  const onAllTnnDeleteClickHandler = event => {\n    dispatch(deleteAllSavedTnn());\n  };\n\n  return (\n    <>\n      {error && `Something went wrong: ${error}`}\n      {errors && errors[0]}\n      <List>\n        {!error &&\n          data &&\n          data.map(document => (\n            <ListItem\n              key={document.Number}\n              sx={{\n                width: '100%',\n              }}\n            >\n              <Card sx={{ width: '100%' }}>\n                <CardContent>\n                  <Box\n                    sx={{\n                      display: 'flex',\n                      alignItems: 'center',\n                    }}\n                  >\n                    <Icon\n                      sx={{\n                        marginRight: theme.spacing(4),\n                        marginLeft: theme.spacing(2),\n                      }}\n                    >\n                      <MarkunreadMailboxIcon />\n                    </Icon>\n                    <Box\n                      sx={{\n                        width: '100%',\n                      }}\n                    >\n                      {isLoading ? (\n                        <Skeleton />\n                      ) : (\n                        <Typography>\n                          Статус доставки:{' '}\n                          {document.Status?.length\n                            ? document.Status\n                            : 'дані відсутні...'}\n                        </Typography>\n                      )}\n                      {isLoading ? (\n                        <Skeleton />\n                      ) : (\n                        <Typography variant=\"body2\" color=\"grey\" mb={1}>\n                          Дата доставки:{' '}\n                          {document.TrackingUpdateDate?.length\n                            ? document.TrackingUpdateDate\n                            : 'дані відсутні...'}\n                        </Typography>\n                      )}\n                    </Box>\n                  </Box>\n                  <Divider />\n                  <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                    <Icon\n                      sx={{\n                        marginRight: theme.spacing(4),\n                        marginLeft: theme.spacing(2),\n                      }}\n                    >\n                      <SendTimeExtensionIcon />\n                    </Icon>\n                    <Box\n                      sx={{\n                        width: '100%',\n                      }}\n                    >\n                      {isLoading ? (\n                        <Skeleton />\n                      ) : (\n                        <Typography mt={1}>\n                          Відправлено:{' '}\n                          {document.WarehouseSender?.length\n                            ? document.WarehouseSender\n                            : 'дані відсутні...'}\n                        </Typography>\n                      )}\n                      {isLoading ? (\n                        <Skeleton />\n                      ) : (\n                        <Typography variant=\"body2\" color=\"grey\" mb={1}>\n                          Дата створення:{' '}\n                          {document.DateCreated?.length\n                            ? document.DateCreated\n                            : 'дані відсутні...'}\n                        </Typography>\n                      )}{' '}\n                    </Box>\n                  </Box>\n                  <Divider />\n                  <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                    <Icon\n                      sx={{\n                        marginRight: theme.spacing(4),\n                        marginLeft: theme.spacing(2),\n                      }}\n                    >\n                      <AllInboxIcon />\n                    </Icon>\n                    <Box\n                      sx={{\n                        width: '100%',\n                      }}\n                    >\n                      {isLoading ? (\n                        <Skeleton />\n                      ) : (\n                        <Typography mt={1}>\n                          Отримано:{' '}\n                          {document.WarehouseRecipient?.length\n                            ? document.WarehouseRecipient\n                            : 'дані відсутні...'}\n                        </Typography>\n                      )}\n                      {isLoading ? (\n                        <Skeleton />\n                      ) : (\n                        <Typography variant=\"body2\" color=\"grey\">\n                          Дата прибуття:{' '}\n                          {document.ActualDeliveryDate?.length\n                            ? document.ActualDeliveryDate\n                            : 'дані відсутні...'}\n                        </Typography>\n                      )}{' '}\n                    </Box>\n                  </Box>\n                  <Divider />\n                </CardContent>\n              </Card>\n            </ListItem>\n          ))}\n      </List>\n      <Typography ml={2}> Історія пошуку: </Typography>\n      <SwipeableEdgeDrawer\n        tnnListData={tnnListData}\n        onTnnListClickHandler={onTnnListClickHandler}\n        onTnnDeleteClickHandler={onTnnDeleteClickHandler}\n      />\n      <List sx={{ display: { xs: 'none', md: 'flex' } }}>\n        <Grid container spacing={2}>\n          {tnnListData &&\n            tnnListData.map(ttn => (\n              <TtnSavedCards\n                key={ttn}\n                ttn={ttn}\n                onTnnListClickHandler={onTnnListClickHandler}\n                onTnnDeleteClickHandler={onTnnDeleteClickHandler}\n              />\n            ))}\n        </Grid>\n      </List>\n      {tnnListData?.length !== 0 && (\n        <Button onClick={onAllTnnDeleteClickHandler} fullWidth mb={8}>\n          очистити історію\n        </Button>\n      )}\n    </>\n  );\n};\n","import {\n  Box,\n  Button,\n  CircularProgress,\n  TextField,\n  useTheme,\n} from '@mui/material';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useEffect } from 'react';\n\nimport { fetchTnn } from 'redux/tnn/tnn-operations';\n\nimport { saveTnn } from 'redux/tnn/tnn-slice';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { getIsLoading, getQueryTnn } from 'redux/tnn/tnn-selectors';\n\nconst validationSchema = yup.object({\n  tnn: yup\n    .string()\n    .matches(/^[0-9]{14}$/, 'ТТН має мати довжину 14 цифр')\n    .required('ТТН не введено'),\n});\n\nexport const TnnSearchForm = () => {\n  const dispatch = useDispatch();\n  const theme = useTheme();\n\n  const queryTnn = useSelector(getQueryTnn);\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    if (!queryTnn) {\n      return;\n    }\n    formik.setFieldValue('tnn', queryTnn);\n    formik.setValues({ tnn: queryTnn });\n    formik.submitForm();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [queryTnn]);\n\n  const formik = useFormik({\n    initialValues: {\n      tnn: queryTnn,\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      const body = {\n        apiKey: '8d677609f6e47ce83929374b3afab572',\n        modelName: 'TrackingDocument',\n        calledMethod: 'getStatusDocuments',\n        methodProperties: {\n          Documents: [\n            {\n              DocumentNumber: values.tnn,\n              Phone: '380681288223',\n            },\n          ],\n        },\n      };\n\n      dispatch(fetchTnn(body));\n      dispatch(saveTnn(values.tnn));\n    },\n  });\n\n  return (\n    <>\n      <Box\n        component=\"form\"\n        onSubmit={formik.handleSubmit}\n        mt={2}\n        sx={{\n          gap: 1,\n        }}\n      >\n        <TextField\n          fullWidth\n          id=\"tnn\"\n          name=\"tnn\"\n          label=\"Введіть ТТН\"\n          value={formik.values.tnn}\n          onChange={formik.handleChange}\n          error={formik.touched.tnn && Boolean(formik.errors.tnn)}\n          helperText={formik.touched.tnn && formik.errors.tnn}\n          sx={{ marginBottom: theme.spacing(2) }}\n        />\n        <Button\n          fullWidth\n          mb={1}\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={isLoading}\n          type=\"submit\"\n        >\n          {isLoading ? <CircularProgress size={25} /> : 'Шукати'}\n        </Button>\n      </Box>\n    </>\n  );\n};\n","import { Container } from '@mui/material';\n\nimport { TnnList } from 'components/TTN/TnnList';\nimport { TnnSearchForm } from 'components/TTN/TnnSearchForm';\n\nconst Tnn = () => {\n  return (\n    <>\n      <Container>\n        <TnnSearchForm />\n        <TnnList />\n      </Container>\n    </>\n  );\n};\n\nexport default Tnn;\n"],"names":["getTnn","state","tnn","getTnnList","tnnList","getQueryTnn","queryTnn","getIsLoading","isLoading","getError","error","TtnSavedCards","ttn","onTnnListClickHandler","onTnnDeleteClickHandler","Grid","item","xs","sm","md","ListItem","sx","minWidth","Zoom","Z","in","Card","width","CardActionArea","CardContent","onClick","Typography","textAlign","CardActions","Button","fullWidth","Root","styled","theme","height","backgroundColor","palette","mode","grey","background","default","StyledBox","Box","Puller","borderRadius","position","top","left","props","window","tnnListData","React","open","setOpen","toggleDrawer","newOpen","container","undefined","document","body","useMediaQuery","breakpoints","down","CssBaseline","styles","overflow","display","SwipeableDrawer","anchor","onClose","onOpen","swipeAreaWidth","disableSwipeToOpen","ModalProps","keepMounted","borderTopLeftRadius","borderTopRightRadius","visibility","right","p","color","length","px","pb","map","TnnList","tnnData","useSelector","useTheme","dispatch","useDispatch","data","errors","event","setQueryTnn","target","dataset","deleteQueryTnn","List","alignItems","Icon","marginRight","spacing","marginLeft","MarkunreadMailbox","Skeleton","Status","variant","mb","TrackingUpdateDate","Divider","SendTimeExtension","mt","WarehouseSender","DateCreated","AllInbox","WarehouseRecipient","ActualDeliveryDate","Number","ml","deleteAllSavedTnn","validationSchema","yup","matches","required","TnnSearchForm","useEffect","formik","setFieldValue","setValues","submitForm","useFormik","initialValues","onSubmit","values","apiKey","modelName","calledMethod","methodProperties","Documents","DocumentNumber","Phone","fetchTnn","saveTnn","component","handleSubmit","gap","TextField","id","name","label","value","onChange","handleChange","touched","Boolean","helperText","marginBottom","disabled","type","CircularProgress","size","Container"],"sourceRoot":""}