{"version":3,"file":"static/js/774.01988bd5.chunk.js","mappings":"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","sources":["redux/tnn/tnn-selectors.js","components/TnnList.jsx","components/TnnSearchForm.jsx","pages/Tnn/Tnn.jsx","redux/departments/departments-selectors.js"],"sourcesContent":["export const getTnn = state => state.tnn.tnn;\nexport const getTnnList = state => state.tnn.tnnList;\nexport const getQueryTnn = state => state.tnn.queryTnn;\n\nexport const getIsLoading = state => state.tnn.isLoading;\nexport const getError = state => state.tnn.error;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { getTnn, getError, getTnnList } from 'redux/tnn/tnn-selectors';\nimport {\n  deleteAllSavedTnn,\n  deleteQueryTnn,\n  setQueryTnn,\n} from 'redux/tnn/tnn-slice';\n\nexport const TnnList = () => {\n  const tnnData = useSelector(getTnn);\n  const tnnListData = useSelector(getTnnList);\n\n  const error = useSelector(getError);\n  const dispatch = useDispatch();\n\n  const { data, errors } = tnnData;\n\n  const onTnnListClickHandler = event => {\n    dispatch(setQueryTnn(event.target.dataset.tnn));\n  };\n\n  const onTnnDeleteClickHandler = event => {\n    dispatch(deleteQueryTnn(event.target.dataset.tnn));\n  };\n  const onAllTnnDeleteClickHandler = event => {\n    dispatch(deleteAllSavedTnn());\n  };\n\n  return (\n    <>\n      {error && `Something went wrong: ${error}`}\n      {errors && errors[0]}\n      <ul>\n        {!error &&\n          data &&\n          data.map(document => (\n            <li key={document.Number}>\n              <p>Статус доставки: {document.Status}</p>\n              <p>Відправлено: {document.WarehouseSender}</p>\n              <p>Отримано:{document.WarehouseRecipient}</p>\n            </li>\n          ))}\n      </ul>\n      <ul>\n        {tnnListData &&\n          tnnListData.map(tnn => (\n            <li key={tnn} data-tnn={tnn}>\n              <p data-tnn={tnn} onClick={onTnnListClickHandler}>\n                {tnn}\n              </p>\n              <button data-tnn={tnn} onClick={onTnnDeleteClickHandler}>\n                delete\n              </button>\n            </li>\n          ))}\n      </ul>\n      <button onClick={onAllTnnDeleteClickHandler}>clear all</button>\n    </>\n  );\n};\n","import { Box, Button, CircularProgress, TextField } from '@mui/material';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useEffect } from 'react';\n\nimport { getIsLoading } from 'redux/departments/departments-selectors';\nimport { fetchTnn } from 'redux/tnn/tnn-operations';\n\nimport { saveTnn } from 'redux/tnn/tnn-slice';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { getQueryTnn } from 'redux/tnn/tnn-selectors';\n\nconst validationSchema = yup.object({\n  tnn: yup\n    .string()\n    .matches(/^[0-9]{14}$/, 'TTN number must be exactly 14 digits long')\n    .required('TTN number is required'),\n});\n\nexport const TnnSearchForm = () => {\n  const dispatch = useDispatch();\n\n  const queryTnn = useSelector(getQueryTnn);\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    if (!queryTnn) {\n      return;\n    }\n    formik.setFieldValue('tnn', queryTnn);\n    formik.setValues({ tnn: queryTnn });\n    formik.submitForm();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [queryTnn]);\n\n  const formik = useFormik({\n    initialValues: {\n      tnn: queryTnn,\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      const body = {\n        apiKey: '8d677609f6e47ce83929374b3afab572',\n        modelName: 'TrackingDocument',\n        calledMethod: 'getStatusDocuments',\n        methodProperties: {\n          Documents: [\n            {\n              DocumentNumber: values.tnn,\n              Phone: '380681186265',\n            },\n          ],\n        },\n      };\n\n      dispatch(fetchTnn(body));\n      dispatch(saveTnn(values.tnn));\n    },\n  });\n\n  return (\n    <>\n      <Box\n        component=\"form\"\n        onSubmit={formik.handleSubmit}\n        sx={{\n          gap: 1,\n        }}\n      >\n        <TextField\n          mb={1}\n          fullWidth\n          id=\"tnn\"\n          name=\"tnn\"\n          label=\"Enter TNN\"\n          value={formik.values.tnn}\n          onChange={formik.handleChange}\n          error={formik.touched.tnn && Boolean(formik.errors.tnn)}\n          helperText={formik.touched.tnn && formik.errors.tnn}\n        />\n        <Button\n          fullWidth\n          mb={1}\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={isLoading}\n          type=\"submit\"\n        >\n          {isLoading ? <CircularProgress size={24} /> : 'Search'}\n        </Button>\n      </Box>\n    </>\n  );\n};\n","import { TnnList } from 'components/TnnList';\nimport { TnnSearchForm } from 'components/TnnSearchForm';\n\nconst Tnn = () => {\n  return (\n    <>\n      <TnnSearchForm />\n      <TnnList />\n    </>\n  );\n};\n\nexport default Tnn;\n","export const getDepartments = state => state.departments.departments;\nexport const getIsLoading = state => state.departments.isLoading;\nexport const getError = state => state.departments.error;\n"],"names":["getTnn","state","tnn","getTnnList","tnnList","getQueryTnn","queryTnn","getError","error","TnnList","tnnData","useSelector","tnnListData","dispatch","useDispatch","data","errors","onTnnListClickHandler","event","setQueryTnn","target","dataset","onTnnDeleteClickHandler","deleteQueryTnn","map","document","Status","WarehouseSender","WarehouseRecipient","Number","onClick","deleteAllSavedTnn","validationSchema","yup","matches","required","TnnSearchForm","isLoading","getIsLoading","useEffect","formik","setFieldValue","setValues","submitForm","useFormik","initialValues","onSubmit","values","body","apiKey","modelName","calledMethod","methodProperties","Documents","DocumentNumber","Phone","fetchTnn","saveTnn","Box","component","handleSubmit","sx","gap","TextField","mb","fullWidth","id","name","label","value","onChange","handleChange","touched","Boolean","helperText","Button","variant","color","disabled","type","CircularProgress","size","getDepartments","departments"],"sourceRoot":""}