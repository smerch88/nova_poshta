{"version":3,"file":"static/js/954.ae51503f.chunk.js","mappings":"0KAAaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,YAAYA,WAAtB,EACtBC,EAAe,SAAAF,GAAK,OAAIA,EAAMC,YAAYE,SAAtB,EACpBC,EAAW,SAAAJ,GAAK,OAAIA,EAAMC,YAAYI,KAAtB,E,SCKhBC,EAAkB,WAC7B,IAAMC,GAAkBC,EAAAA,EAAAA,IAAYT,GAC9BM,GAAQG,EAAAA,EAAAA,IAAYJ,GAClBK,EAAeF,EAAfE,KAAMC,EAASH,EAATG,KAEd,OACE,gCACGL,GAAK,gCAA6BA,GAClCK,GAA4B,IAApBA,EAAKC,WAAmB,kCAAoC,MACrE,wBACGF,GACCA,EAAKG,KAAI,SAAAC,GAAU,OACjB,wBAA8BA,EAAWC,cAAhCD,EAAWE,QADH,QAM5B,E,sECbKC,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,GAAW,wBAAwBE,SAAS,sBAGxCC,EAAwB,WACnC,IAAMC,GAAWC,EAAAA,EAAAA,MAEXnB,GAAYK,EAAAA,EAAAA,IAAYN,GAExBqB,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbP,MAAO,IAETF,iBAAkBA,EAClBU,SAAU,SAAAC,GACR,IAAMC,EAAO,CACXC,OAAQ,mCACRC,UAAW,UACXC,aAAc,gBACdC,iBAAkB,CAChBC,SAAUN,EAAOT,MACjBgB,KAAM,IACNC,MAAO,KACPC,SAAU,OAIdf,GAASgB,EAAAA,EAAAA,GAAiBT,GAC3B,IAGH,OACE,+BACE,UAACU,EAAA,EAAD,CACEC,UAAU,OACVb,SAAUH,EAAOiB,aACjBC,GAAI,CACFC,IAAK,GAJT,WAOE,SAACC,EAAA,EAAD,CACEC,GAAI,EACJC,WAAS,EACTC,GAAG,QACHC,KAAK,QACLC,MAAM,4BACNC,MAAO1B,EAAOI,OAAOT,MACrBgC,SAAU3B,EAAO4B,aACjB9C,MAAOkB,EAAO6B,QAAQlC,OAASmC,QAAQ9B,EAAO+B,OAAOpC,OACrDqC,WAAYhC,EAAO6B,QAAQlC,OAASK,EAAO+B,OAAOpC,SAEpD,SAACsC,EAAA,EAAD,CACEX,WAAS,EACTD,GAAI,EACJa,QAAQ,YACRC,MAAM,UACNC,SAAUxD,EACVyD,KAAK,SANP,SAQGzD,GAAY,SAAC0D,EAAA,EAAD,CAAkBC,KAAM,KAAS,eAKvD,EC/DD,EAToB,WAClB,OACE,iCACE,SAAC1C,EAAD,KACA,SAACd,EAAD,MAGL,C","sources":["redux/departments/departments-selectors.js","components/DepartmentsList.jsx","components/DepartmentsSearchForm.jsx","pages/Departments.jsx"],"sourcesContent":["export const getDepartments = state => state.departments.departments;\nexport const getIsLoading = state => state.departments.isLoading;\nexport const getError = state => state.departments.error;\n","import { useSelector } from 'react-redux';\n\nimport {\n  getDepartments,\n  getError,\n} from 'redux/departments/departments-selectors';\n\nexport const DepartmentsList = () => {\n  const departmentsData = useSelector(getDepartments);\n  const error = useSelector(getError);\n  const { data, info } = departmentsData;\n\n  return (\n    <>\n      {error && `Something went wrong: ${error}`}\n      {info && info.totalCount === 0 ? 'Sorry, there are no departments' : null}\n      <ul>\n        {data &&\n          data.map(department => (\n            <li key={department.SiteKey}>{department.ShortAddress}</li>\n          ))}\n      </ul>\n    </>\n  );\n};\n","/* eslint-disable no-unused-vars */\nimport { Box, Button, CircularProgress, TextField } from '@mui/material';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getIsLoading } from 'redux/departments/departments-selectors';\nimport { fetchDepartments } from 'redux/departments/departments-operations';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nconst validationSchema = yup.object({\n  query: yup.string('Enter Name to Search').required('Name is Required'),\n});\n\nexport const DepartmentsSearchForm = () => {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(getIsLoading);\n\n  const formik = useFormik({\n    initialValues: {\n      query: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      const body = {\n        apiKey: '8d677609f6e47ce83929374b3afab572',\n        modelName: 'Address',\n        calledMethod: 'getWarehouses',\n        methodProperties: {\n          CityName: values.query,\n          Page: '1',\n          Limit: '50',\n          Language: 'UA',\n        },\n      };\n\n      dispatch(fetchDepartments(body));\n    },\n  });\n\n  return (\n    <>\n      <Box\n        component=\"form\"\n        onSubmit={formik.handleSubmit}\n        sx={{\n          gap: 1,\n        }}\n      >\n        <TextField\n          mb={1}\n          fullWidth\n          id=\"query\"\n          name=\"query\"\n          label=\"What do you want to find?\"\n          value={formik.values.query}\n          onChange={formik.handleChange}\n          error={formik.touched.query && Boolean(formik.errors.query)}\n          helperText={formik.touched.query && formik.errors.query}\n        />\n        <Button\n          fullWidth\n          mb={1}\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={isLoading}\n          type=\"submit\"\n        >\n          {isLoading ? <CircularProgress size={24} /> : 'Search'}\n        </Button>\n      </Box>\n    </>\n  );\n};\n","import { DepartmentsList } from 'components/DepartmentsList';\nimport { DepartmentsSearchForm } from 'components/DepartmentsSearchForm';\n\nconst Departments = () => {\n  return (\n    <>\n      <DepartmentsSearchForm />\n      <DepartmentsList />\n    </>\n  );\n};\n\nexport default Departments;\n"],"names":["getDepartments","state","departments","getIsLoading","isLoading","getError","error","DepartmentsList","departmentsData","useSelector","data","info","totalCount","map","department","ShortAddress","SiteKey","validationSchema","yup","query","required","DepartmentsSearchForm","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","body","apiKey","modelName","calledMethod","methodProperties","CityName","Page","Limit","Language","fetchDepartments","Box","component","handleSubmit","sx","gap","TextField","mb","fullWidth","id","name","label","value","onChange","handleChange","touched","Boolean","errors","helperText","Button","variant","color","disabled","type","CircularProgress","size"],"sourceRoot":""}